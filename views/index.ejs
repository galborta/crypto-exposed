<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crypto Exposed - Exposing Crypto Scammers</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <header class="bg-gray-900 text-white">
        <div class="container mx-auto px-4 py-6">
            <div class="flex justify-between items-center">
                <h1 class="text-2xl font-bold">Crypto Exposed</h1>
                <p class="text-gray-400">Exposing Crypto Scammers</p>
            </div>
        </div>
    </header>

    <main class="container mx-auto px-4 py-8">
        <!-- Stats Section -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Total Scammers Exposed</h3>
                <p class="text-2xl font-bold mt-2" id="totalProfiles">0</p>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Active Scammers</h3>
                <p class="text-2xl font-bold mt-2" id="activeProfiles">0</p>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Total Amount Scammed</h3>
                <p class="text-2xl font-bold mt-2 text-red-600" id="totalScammed">$0</p>
            </div>
        </div>

        <!-- Search Section -->
        <div class="mb-8">
            <div class="bg-white rounded-lg shadow p-6">
                <h2 class="text-xl font-semibold mb-4">Search Scammers</h2>
                <div class="flex gap-4">
                    <input type="text" id="searchInput" placeholder="Search by name or project..." 
                           class="flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <button onclick="searchProfiles()" class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600">
                        Search
                    </button>
                </div>
            </div>
        </div>

        <!-- Profiles Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="profilesGrid">
            <!-- Profiles will be inserted here -->
        </div>
    </main>

    <!-- Profile Modal -->
    <div id="profileModal" class="fixed inset-0 bg-black bg-opacity-50 hidden">
        <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white max-h-[80vh] overflow-y-auto">
            <div class="mb-4">
                <h3 class="text-2xl font-bold mb-2" id="modalName"></h3>
                <div class="flex items-center gap-4 mb-4">
                    <img id="modalPhoto" src="" alt="" class="w-24 h-24 rounded-full object-cover bg-gray-200 hidden">
                    <div>
                        <p class="text-lg font-semibold">Amount Scammed:</p>
                        <p class="text-xl text-red-600 font-bold" id="modalAmount"></p>
                    </div>
                </div>
                <div class="space-y-4">
                    <div>
                        <h4 class="text-lg font-semibold">Description</h4>
                        <p id="modalDescription" class="text-gray-600"></p>
                    </div>
                    <div>
                        <h4 class="text-lg font-semibold">Associated Projects</h4>
                        <p id="modalProjects" class="text-gray-600"></p>
                    </div>
                    <div>
                        <h4 class="text-lg font-semibold">Evidence</h4>
                        <p id="modalEvidence" class="text-gray-600"></p>
                    </div>
                    <div>
                        <h4 class="text-lg font-semibold">Status</h4>
                        <span id="modalStatus" class="inline-block px-3 py-1 rounded-full text-sm font-semibold"></span>
                    </div>
                </div>
            </div>
            <div class="mt-4 flex justify-end">
                <button onclick="closeModal()" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">
                    Close
                </button>
            </div>
        </div>
    </div>

    <script>
        let profiles = [];
        let filteredProfiles = [];

        // Fetch profiles
        async function fetchProfiles() {
            try {
                const response = await fetch('/api/profiles');
                profiles = await response.json();
                filteredProfiles = [...profiles];
                renderProfiles();
                updateStats();
            } catch (error) {
                console.error('Error fetching profiles:', error);
            }
        }

        // Render profiles
        function renderProfiles() {
            const grid = document.getElementById('profilesGrid');
            grid.innerHTML = filteredProfiles.map(profile => `
                <div class="bg-white rounded-lg shadow overflow-hidden hover:shadow-lg transition-shadow cursor-pointer"
                     onclick="showProfileDetails('${profile._id}')">
                    <div class="p-6">
                        <div class="flex items-center gap-4 mb-4">
                            ${profile.photoUrl ? `
                                <img src="${profile.photoUrl}" alt="${profile.name}" 
                                     class="w-16 h-16 rounded-full object-cover">
                            ` : `
                                <div class="w-16 h-16 rounded-full bg-gray-200 flex items-center justify-center">
                                    <span class="text-2xl text-gray-500">${profile.name.charAt(0)}</span>
                                </div>
                            `}
                            <div>
                                <h3 class="text-lg font-semibold">${profile.name}</h3>
                                <span class="status-badge ${getStatusClass(profile.status)}">
                                    ${formatStatus(profile.status)}
                                </span>
                            </div>
                        </div>
                        <div class="mb-4">
                            <p class="text-sm text-gray-600 line-clamp-2">${profile.description}</p>
                        </div>
                        <div class="flex justify-between items-center">
                            <div>
                                <p class="text-sm text-gray-500">Amount Scammed:</p>
                                <p class="text-lg font-bold text-red-600">
                                    ${formatCurrency(profile.totalScammedUSD)}
                                </p>
                            </div>
                            <button class="text-blue-500 hover:text-blue-700">
                                View Details â†’
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Update statistics
        function updateStats() {
            const totalProfiles = profiles.length;
            const activeProfiles = profiles.filter(p => p.status === 'active').length;
            const totalScammed = profiles.reduce((sum, p) => sum + p.totalScammedUSD, 0);

            document.getElementById('totalProfiles').textContent = totalProfiles;
            document.getElementById('activeProfiles').textContent = activeProfiles;
            document.getElementById('totalScammed').textContent = formatCurrency(totalScammed);
        }

        // Search profiles
        function searchProfiles() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            filteredProfiles = profiles.filter(profile => 
                profile.name.toLowerCase().includes(searchTerm) ||
                profile.associatedProjects.toLowerCase().includes(searchTerm) ||
                profile.description.toLowerCase().includes(searchTerm)
            );
            renderProfiles();
        }

        // Show profile details
        function showProfileDetails(id) {
            const profile = profiles.find(p => p._id === id);
            if (profile) {
                document.getElementById('modalName').textContent = profile.name;
                
                const photoEl = document.getElementById('modalPhoto');
                if (profile.photoUrl) {
                    photoEl.src = profile.photoUrl;
                    photoEl.classList.remove('hidden');
                } else {
                    photoEl.classList.add('hidden');
                }
                
                document.getElementById('modalAmount').textContent = formatCurrency(profile.totalScammedUSD);
                document.getElementById('modalDescription').textContent = profile.description;
                document.getElementById('modalProjects').textContent = profile.associatedProjects;
                document.getElementById('modalEvidence').textContent = profile.evidence;
                
                const statusEl = document.getElementById('modalStatus');
                statusEl.textContent = formatStatus(profile.status);
                statusEl.className = `inline-block px-3 py-1 rounded-full text-sm font-semibold ${getStatusClass(profile.status)}`;
                
                document.getElementById('profileModal').classList.remove('hidden');
            }
        }

        // Close modal
        function closeModal() {
            document.getElementById('profileModal').classList.add('hidden');
        }

        // Helper functions
        function getStatusClass(status) {
            const classes = {
                active: 'status-active',
                inactive: 'status-inactive',
                under_investigation: 'status-investigating'
            };
            return classes[status] || '';
        }

        function formatStatus(status) {
            return status.split('_').map(word => 
                word.charAt(0).toUpperCase() + word.slice(1)
            ).join(' ');
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD'
            }).format(amount);
        }

        // Search input event listener
        document.getElementById('searchInput').addEventListener('keyup', (e) => {
            if (e.key === 'Enter') {
                searchProfiles();
            }
        });

        // Close modal when clicking outside
        document.getElementById('profileModal').addEventListener('click', (e) => {
            if (e.target === document.getElementById('profileModal')) {
                closeModal();
            }
        });

        // Load profiles when page loads
        document.addEventListener('DOMContentLoaded', fetchProfiles);
    </script>

    <style>
        .status-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            font-size: 0.75rem;
            font-weight: 600;
            border-radius: 9999px;
        }

        .status-active {
            background-color: #dcfce7;
            color: #166534;
        }

        .status-inactive {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .status-investigating {
            background-color: #fef3c7;
            color: #92400e;
        }

        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
    </style>
</body>
</html>