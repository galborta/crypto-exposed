<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EXP0S3D - Exposing Crypto Scammers</title>
    <%- include('partials/styles') %>
    <style>
        @font-face {
            font-family: 'SpaceMono';
            src: url('/fonts/SpaceMono-Regular.ttf') format('truetype');
            font-weight: normal;
            font-style: normal;
            font-display: swap;
        }

        @font-face {
            font-family: 'SpaceMono';
            src: url('/fonts/SpaceMono-Bold.ttf') format('truetype');
            font-weight: bold;
            font-style: normal;
            font-display: swap;
        }

        body {
            background-color: #20201d;
        }

        /* Text colors for search and wall of shame */
        .text-black {
            color: #20201d !important;
        }

        #profilesGrid h3 {
            color: #20201d;
        }

        /* Modal content styling */
        #modalOverview,
        #modalStory,
        #modalMethodology {
            font-family: 'SpaceMono', monospace;
            font-size: 0.9375rem;
            line-height: 1.75;
            color: #20201d;
            text-align: left;
            width: 100%;
            margin: 0;
            padding: 1rem 1.5rem 1.5rem 1.5rem;
            white-space: pre-wrap;
            word-break: normal;
            word-wrap: normal;
            overflow-wrap: normal;
            hyphens: none;
            letter-spacing: -0.01em;
        }

        /* Paragraph spacing */
        #modalOverview p,
        #modalStory p,
        #modalMethodology p {
            margin: 0;
            padding: 0;
        }

        #modalOverview p + p,
        #modalStory p + p,
        #modalMethodology p + p {
            margin-top: 1.5em;
        }

        /* Mobile-specific adjustments */
        @media screen and (max-width: 768px) {
            #modalOverview,
            #modalStory,
            #modalMethodology {
                font-size: 0.9375rem;
                line-height: 1.75;
                padding: 1rem 1.25rem 1.25rem 1.25rem;
                width: 100%;
                white-space: pre-wrap;
                word-break: normal;
                word-wrap: normal;
                overflow-wrap: normal;
                hyphens: none;
                text-align: left;
                letter-spacing: -0.01em;
            }

            #modalOverview p + p,
            #modalStory p + p,
            #modalMethodology p + p {
                margin-top: 1.25em;
            }

            /* Methodology list styling for mobile */
            #modalMethodology ul {
                padding-left: 1.25rem;
                margin: 0;
            }

            #modalMethodology li {
                margin-bottom: 1rem;
                padding-left: 1.25rem;
                position: relative;
                line-height: 1.75;
            }

            #modalMethodology li:last-child {
                margin-bottom: 0;
            }

            #modalMethodology li::before {
                content: 'â†’';
                position: absolute;
                left: -0.25rem;
                color: #20201D;
            }
        }

        /* Even smaller screens */
        @media screen and (max-width: 480px) {
            #modalOverview,
            #modalStory,
            #modalMethodology {
                padding: 0.875rem 1rem 1rem 1rem;
            }

            #modalMethodology ul {
                padding-left: 1rem;
            }

            #modalMethodology li {
                padding-left: 1rem;
                margin-bottom: 0.875rem;
            }

            #modalMethodology li:last-child {
                margin-bottom: 0;
            }
        }

        /* High contrast and clear focus states for better accessibility */
        #modalOverview:focus,
        #modalStory:focus,
        #modalMethodology:focus {
            outline: 2px solid #20201d;
            outline-offset: 2px;
        }

        /* Improve text selection visibility */
        #modalOverview::selection,
        #modalStory::selection,
        #modalMethodology::selection {
            background-color: rgba(32, 32, 29, 0.2);
            color: #20201d;
        }

        /* Modal photo and name container */
        .modal-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            margin-bottom: 2rem;
            margin-top: 1.5rem;  /* Add space after the file number */
        }

        /* Modal photo styling */
        #modalPhoto {
            transition: opacity 0.2s ease-in-out;
            width: 120px;
            height: 120px;
            margin: 0 auto 1rem auto;
            border-width: 4px;
            border-color: rgba(254, 226, 226, 1);
            border-radius: 9999px;
            object-fit: cover;
        }
        
        #modalPhoto:not([src]), 
        #modalPhoto[src=""] {
            opacity: 0;
        }

        /* Modal name styling */
        #modalName {
            color: #20201d;
            font-size: 1.5rem;
            line-height: 1.4;
            font-weight: 600;
            white-space: normal;
            text-align: center;
            margin: 0;
        }

        @media screen and (max-width: 768px) {
            #modalPhoto {
                width: 100px;
                height: 100px;
            }
            
            #modalName {
                font-size: 1.25rem;
            }
        }

        .section-button span {
            color: #20201d;
        }

        .section-button svg {
            width: 1.25rem;
            height: 1.25rem;
            color: #20201d;
            transition: transform 0.2s ease;
        }

        .section-button svg.rotated {
            transform: rotate(180deg);
        }

        /* Modal styles */
        #profileModal {
            position: fixed;
            inset: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 50;
        }
        
        #profileModal.hidden {
            display: none;
        }

        #profileModal > div {
            background: white;
            border-radius: 0.5rem;
            max-width: 64rem;
            width: calc(100% - 2rem);
            margin: 1rem;
            max-height: 90vh;
            overflow-y: auto;
            padding: 1.5rem;
            position: relative;
        }

        /* File number styling with typewriter effect */
        #modalFileNumber {
            position: absolute;
            top: 1.5rem;
            left: 1.5rem;
            font-family: 'SpaceMono', monospace;
            font-weight: normal;
            color: #20201D;
            font-size: 0.875rem;
            white-space: nowrap;
            overflow: hidden;
            border-right: 2px solid #20201D;
            width: 0;
            animation: typing 1s steps(40, end) forwards;
            animation-delay: 0.5s;
        }

        @keyframes typing {
            from { width: 0; }
            to { width: var(--file-number-width, fit-content); }
        }

        #modalFileNumber.typing-done {
            border-right-color: transparent;
            width: var(--file-number-width, fit-content);
        }

        @media screen and (max-width: 768px) {
            #modalFileNumber {
                font-size: 0.75rem;
            }
        }

        /* Section styling */
        .section {
            position: relative;
            transition: all 0.3s ease;
        }

        .section button {
            position: relative;
            width: 100%;
            text-align: left;
            padding: 1rem 1.25rem;
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 0.75rem;
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .section button:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(32, 32, 29, 0.2);
        }

        .section button:focus-visible {
            outline: 2px solid #20201D;
            outline-offset: 2px;
        }

        .section button::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            height: 100%;
            width: 4px;
            background: #20201D;
            transform: scaleY(0);
            transition: transform 0.3s ease;
            border-radius: 4px 0 0 4px;
        }

        .section button.active {
            border-color: #20201D;
            background: linear-gradient(to right, rgba(32, 32, 29, 0.03), transparent);
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
        }

        .section button.active::before {
            transform: scaleY(1);
        }

        .section button:hover {
            border-color: #20201D;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .section button svg {
            transition: all 0.3s ease;
            opacity: 0.5;
        }

        .section button.active svg {
            transform: rotate(180deg);
            opacity: 1;
        }

        .section-content {
            max-height: 0;
            overflow: hidden;
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            opacity: 0;
            border: 1px solid transparent;
            border-top: none;
            border-bottom-left-radius: 0.75rem;
            border-bottom-right-radius: 0.75rem;
            transform: translateY(-10px);
            margin-top: 0;
        }

        .section-content.open {
            max-height: none;
            opacity: 1;
            transform: translateY(0);
            border-color: #20201D;
            margin-top: -1px;
        }

        /* Content styling */
        .section-content > div {
            padding: 1.25rem 1.5rem 1.5rem 1.5rem;
        }

        /* Story section specific styling */
        #storySection.section-content.open {
            max-height: 400px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #20201D transparent;
        }

        #storySection.section-content.open::-webkit-scrollbar {
            width: 4px;
        }

        #storySection.section-content.open::-webkit-scrollbar-track {
            background: transparent;
        }

        #storySection.section-content.open::-webkit-scrollbar-thumb {
            background-color: #20201D;
            border-radius: 2px;
        }

        /* Basic Information Cards */
        #basicInfoSection .grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 1rem;
            padding: 1.25rem 1.5rem 1.5rem 1.5rem;
        }

        #basicInfoSection .grid > div {
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 0.75rem;
            padding: 1rem;
            transition: all 0.3s ease;
        }

        #basicInfoSection .text-sm {
            font-size: 0.875rem;
            color: #6b7280;
            margin-bottom: 0.25rem;
        }

        #basicInfoSection .font-medium {
            font-family: 'SpaceMono';
            font-weight: bold;
            color: #20201D;
            font-size: 1rem;
        }

        /* Section Headers */
        .section button span {
            font-size: 1.125rem;
            font-weight: 600;
            color: #20201D;
            transition: all 0.3s ease;
        }

        .section button.active span {
            transform: translateX(8px);
        }

        /* Methodology List Styling */
        #modalMethodology ul {
            list-style: none;
            padding: 0;
        }

        #modalMethodology li {
            position: relative;
            padding-left: 1.5rem;
            margin-bottom: 1rem;
            line-height: 1.6;
        }

        #modalMethodology li::before {
            content: 'â†’';
            position: absolute;
            left: 0;
            color: #20201D;
            font-weight: bold;
        }

        /* Story and Methodology sections */
        #storySection .prose,
        #methodologySection .prose {
            padding-right: 1rem;
        }

        /* Remove scrollbar styles for other sections */
        #modalOverview::-webkit-scrollbar,
        #methodologySection .prose::-webkit-scrollbar,
        #overviewSection::-webkit-scrollbar,
        #methodologySection::-webkit-scrollbar,
        #basicInfoSection::-webkit-scrollbar,
        #socialsSection::-webkit-scrollbar,
        #knownWalletsSection::-webkit-scrollbar {
            display: none;
        }

        /* Mobile-specific adjustments */
        @media screen and (max-width: 768px) {
            .section-content > div {
                padding: 1rem 1.25rem 1.25rem 1.25rem;
            }

            #basicInfoSection .grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 0.875rem;
                padding: 1rem 1.25rem 1.25rem 1.25rem;
            }

            #socialsSection .grid,
            #knownWalletsSection .space-y-4 {
                padding: 1rem 1.25rem 1.25rem 1.25rem;
            }

            #modalOverview,
            #modalStory,
            #modalMethodology {
                font-size: 0.875rem;
                line-height: 1.6;
                padding: 1rem 1.25rem 1.25rem 1.25rem;
                max-width: 100%;
            }
        }

        /* Even smaller screens */
        @media screen and (max-width: 480px) {
            .section-content > div {
                padding: 0.875rem 1rem 1rem 1rem;
            }

            #basicInfoSection .grid {
                padding: 0.875rem 1rem 1rem 1rem;
            }

            #socialsSection .grid,
            #knownWalletsSection .space-y-4 {
                padding: 0.875rem 1rem 1rem 1rem;
            }

            #modalOverview,
            #modalStory,
            #modalMethodology {
                padding: 0.875rem 1rem 1rem 1rem;
            }
        }

        /* Logo styling */
        .logo {
            font-family: 'Wallpoet', monospace;
            font-size: 2rem;
            font-weight: 400;
            color: rgba(255, 255, 255, 0.9);
            text-decoration: none;
            position: relative;
            display: inline-block;
            white-space: nowrap;
            animation: neonGlow 1.5s infinite alternate;
            text-shadow: 0 0 2px rgba(255, 255, 255, 0.5),
                        0 0 4px rgba(255, 255, 255, 0.5),
                        0 0 8px rgba(255, 255, 255, 0.5);
            transition: all 0.3s ease;
        }

        @keyframes neonGlow {
            0% {
                color: rgba(255, 255, 255, 0.7);
                text-shadow: 0 0 1px rgba(255, 255, 255, 0.2),
                            0 0 2px rgba(255, 255, 255, 0.2),
                            0 0 3px rgba(255, 255, 255, 0.2);
            }
            100% {
                color: rgba(255, 255, 255, 1);
                text-shadow: 0 0 2px rgba(255, 255, 255, 0.95),
                            0 0 4px rgba(255, 255, 255, 0.95),
                            0 0 8px rgba(255, 255, 255, 0.95);
            }
        }

        /* Mobile logo adjustments */
        @media screen and (max-width: 768px) {
            .logo {
                font-size: 1.5rem;
            }
        }

        @media screen and (max-width: 480px) {
            .logo {
                font-size: 1.25rem;
            }
        }
    </style>
</head>
<body class="text-gray-100">
    <%- include('partials/header') %>

    <main class="container mx-auto px-4 py-8">
        <!-- Search Section -->
        <div class="mb-8">
            <div class="bg-white rounded-lg shadow">
                <div class="flex">
                    <input type="text" id="searchInput" placeholder="Search by name or project..." 
                           class="flex-1 p-2 border-0 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500" style="background-color: white; color: #20201D">
                    <button onclick="searchProfiles()" style="background-color: white; color: #20201D; box-shadow: 0 1px 2px rgba(0,0,0,0.1); border-left: 1px solid #e5e7eb;" class="px-4 py-2 rounded-r-lg hover:bg-gray-50 transition-all font-medium hover:shadow-md active:bg-gray-100">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Main List Section -->
        <div class="bg-white rounded-lg shadow overflow-hidden mb-8">
            <div class="px-4 sm:px-6 py-4 border-b border-gray-200">
                <h2 class="text-xl font-semibold text-black"></h2>
            </div>
            <div id="profilesGrid" class="divide-y divide-gray-200">
                <!-- Profiles will be rendered here -->
            </div>
        </div>

        <!-- Stats Section -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Total Financial Impact</h3>
                <p class="text-2xl font-bold mt-2" style="color: #9e2a2b" id="totalScammed">$0</p>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex justify-between items-start">
                    <div>
                        <h3 class="text-gray-500 text-sm font-medium">Total Subjects Listed</h3>
                        <p class="text-2xl font-bold mt-2" style="color: #9e2a2b" id="totalSubjects">0</p>
                    </div>
                    <a href="/contact?form=submit" title="Submit New Entry" class="inline-flex items-center justify-center p-2 text-white rounded-full hover:opacity-90 transition-opacity" style="background-color: #20201D">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                        </svg>
                    </a>
                </div>
            </div>
        </div>
    </main>

    <!-- Profile Modal -->
    <div id="profileModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden" onclick="handleModalClick(event)">
        <div class="bg-white rounded-lg max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="p-6">
                <!-- File Number -->
                <div id="modalFileNumber"></div>
                
                <!-- Close button -->
                <button onclick="closeModal()" class="float-right text-gray-500 hover:text-gray-700">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>

                <!-- Profile header with centered photo and name -->
                <div class="modal-header">
                    <img id="modalPhoto" src="" alt="">
                    <h3 id="modalName"></h3>
                    <div class="mt-1 text-sm text-gray-600" id="modalProjects"></div>
                    <div class="mt-3" style="background-color: rgba(158, 42, 43, 0.1); border-radius: 0.5rem; padding: 0.5rem 1rem;">
                        <p style="color: #9e2a2b" class="text-xs font-medium uppercase tracking-wide">Financial Impact</p>
                        <p style="color: #9e2a2b" class="text-lg font-bold" id="modalAmount"></p>
                    </div>
                </div>

                <!-- Sections -->
                <div class="space-y-6">
                    <!-- Overview Section -->
                    <div class="section">
                        <button class="w-full text-left px-4 py-3 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-between" onclick="toggleSection('overview')">
                            <span class="text-lg font-medium text-gray-900">Overview</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="overviewSection" class="section-content mt-2 px-4">
                            <div id="modalOverview" class="prose max-w-none text-gray-700"></div>
                        </div>
                    </div>

                    <!-- Basic Information Section -->
                    <div class="section">
                        <button class="w-full text-left px-4 py-3 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-between" onclick="toggleSection('basicInfo')">
                            <span class="text-lg font-medium text-gray-900">Basic Information</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="basicInfoSection" class="section-content mt-2 px-4">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="bg-gray-50 p-3 rounded-lg">
                                    <p class="text-sm text-gray-500">Date of Birth</p>
                                    <p id="modalDOB" class="font-medium"></p>
                                </div>
                                <div class="bg-gray-50 p-3 rounded-lg">
                                    <p class="text-sm text-gray-500">Age</p>
                                    <p id="modalAge" class="font-medium"></p>
                                </div>
                                <div class="bg-gray-50 p-3 rounded-lg">
                                    <p class="text-sm text-gray-500">Height</p>
                                    <p id="modalHeight" class="font-medium"></p>
                                </div>
                                <div class="bg-gray-50 p-3 rounded-lg">
                                    <p class="text-sm text-gray-500">Weight</p>
                                    <p id="modalWeight" class="font-medium"></p>
                                </div>
                                <div class="bg-gray-50 p-3 rounded-lg">
                                    <p class="text-sm text-gray-500">Nationality</p>
                                    <p id="modalNationality" class="font-medium"></p>
                                </div>
                                <div class="bg-gray-50 p-3 rounded-lg">
                                    <p class="text-sm text-gray-500">Place of Birth</p>
                                    <p id="modalPlaceOfBirth" class="font-medium"></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Story Section -->
                    <div class="section">
                        <button class="w-full text-left px-4 py-3 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-between" onclick="toggleSection('story')">
                            <span class="text-lg font-medium text-gray-900">Story</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="storySection" class="section-content mt-2 px-4">
                            <div id="modalStory" class="prose max-w-none text-gray-700"></div>
                        </div>
                    </div>

                    <!-- Methodology Section -->
                    <div class="section">
                        <button class="w-full text-left px-4 py-3 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-between" onclick="toggleSection('methodology')">
                            <span class="text-lg font-medium text-gray-900">Methodology</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="methodologySection" class="section-content mt-2 px-4">
                            <div id="modalMethodology" class="prose max-w-none text-gray-700"></div>
                        </div>
                    </div>

                    <!-- Socials Section -->
                    <div class="section">
                        <button class="w-full text-left px-4 py-3 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-between" onclick="toggleSection('socials')">
                            <span class="text-lg font-medium text-gray-900">Socials</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="socialsSection" class="section-content mt-2 px-4">
                            <div id="modalSocials">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <!-- Socials will be dynamically inserted here -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Known Wallets Section -->
                    <div class="section">
                        <button class="w-full text-left px-4 py-3 bg-gray-100 hover:bg-gray-200 rounded-lg flex items-center justify-between" onclick="toggleSection('knownWallets')">
                            <span class="text-lg font-medium text-gray-900">Known Wallets</span>
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </button>
                        <div id="knownWalletsSection" class="section-content mt-2 px-4">
                            <div id="modalKnownWallets">
                                <div class="space-y-4">
                                    <!-- Known wallets will be dynamically inserted here -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer style="background-color: #20201D">
        <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
            <nav class="flex justify-center space-x-8 mb-6">
                <a href="/" class="text-white hover:text-gray-300 transition-colors">Home</a>
                <a href="/about" class="text-white hover:text-gray-300 transition-colors">About</a>
                <a href="/contact" class="text-white hover:text-gray-300 transition-colors">Contact</a>
                <a href="/contribute" class="text-white hover:text-gray-300 transition-colors">Contribute</a>
            </nav>
            <p class="text-center text-white text-sm">
                We must hold them accountable.
            </p>
        </div>
    </footer>

    <script>
        let profiles = [];
        let filteredProfiles = [];

        async function initialize() {
            try {
                // Fetch stats
                const statsResponse = await fetch('/api/profiles/stats');
                const stats = await statsResponse.json();
                
                // Update stats display
                document.getElementById('totalScammed').textContent = formatCurrency(stats.totalScammedUSD || 0);
                
                // Fetch profiles
                const profilesResponse = await fetch('/api/profiles');
                const data = await profilesResponse.json();
                
                // Handle different response structures
                if (data.profiles) {
                    profiles = data.profiles;
                } else if (Array.isArray(data)) {
                    profiles = data;
                } else {
                    profiles = [];
                }
                
                // Filter published profiles and sort by amount scammed
                const publishedProfiles = profiles
                    .filter(p => p.status === 'Published')
                    .sort((a, b) => b.totalScammedUSD - a.totalScammedUSD);
                
                // Update total subjects count
                document.getElementById('totalSubjects').textContent = publishedProfiles.length;
                
                renderProfiles(publishedProfiles);

                // Add resize event listener
                window.addEventListener('resize', handleResize);
            } catch (error) {
                console.error('Error initializing:', error);
            }
        }

        function renderProfiles(profilesToShow) {
            const container = document.getElementById('profilesGrid');
            
            if (!profilesToShow || !profilesToShow.length) {
                container.innerHTML = '<p class="text-center text-gray-500 py-8">No profiles found</p>';
                return;
            }

            container.innerHTML = profilesToShow.map((profile) => `
                <div class="flex items-center px-4 sm:px-6 py-4 hover:bg-gray-50 cursor-pointer space-x-3 sm:space-x-4" 
                     onclick="showProfileDetails('${profile._id}')">
                    <div class="flex-none w-12 h-12 sm:w-16 sm:h-16">
                        <img src="${profile.photoUrl || '/default-avatar.svg'}" 
                             alt="${profile.name}" 
                             class="w-full h-full object-cover rounded-full">
                    </div>
                    <div class="flex-grow min-w-0">
                        <h3 class="text-base sm:text-lg font-semibold truncate text-black">${profile.name}</h3>
                        <p class="text-xs sm:text-sm text-gray-500 truncate">${profile.associatedProjects || 'Unknown project'}</p>
                    </div>
                    <div class="flex-none text-right">
                        <p class="text-base sm:text-xl font-bold" style="color: #9e2a2b">${formatCurrency(profile.totalScammedUSD)}</p>
                        <p class="text-xs sm:text-sm text-gray-500">Total Scammed</p>
                    </div>
                </div>
            `).join('');
        }

        function checkScrollable() {
            const sections = ['story', 'methodology'];
            sections.forEach(section => {
                const content = document.querySelector(`#${section}Section .prose`);
                if (content) {
                    if (content.scrollHeight > content.clientHeight) {
                        content.classList.add('scrollable');
                    } else {
                        content.classList.remove('scrollable');
                    }
                }
            });
        }

        function showProfileDetails(id) {
            const profile = profiles.find(p => p._id === id);
            if (!profile) return;

            // Reset and prepare file number for animation
            const fileNumberElement = document.getElementById('modalFileNumber');
            if (fileNumberElement) {
                fileNumberElement.style.animation = 'none';
                fileNumberElement.classList.remove('typing-done');
                fileNumberElement.offsetHeight; // Trigger reflow
                fileNumberElement.style.animation = null;
                fileNumberElement.textContent = 'File #: ' + (profile.fileNumber || 'No file number');
                
                // Calculate the width needed for the text with extra padding
                const tempSpan = document.createElement('span');
                tempSpan.style.visibility = 'hidden';
                tempSpan.style.font = window.getComputedStyle(fileNumberElement).font;
                tempSpan.textContent = fileNumberElement.textContent;
                document.body.appendChild(tempSpan);
                const width = tempSpan.offsetWidth + 4; // Add 4px padding for the last letter
                document.body.removeChild(tempSpan);
                document.documentElement.style.setProperty('--file-number-width', width + 'px');
                
                // Add event listener for animation end
                fileNumberElement.addEventListener('animationend', function() {
                    this.classList.add('typing-done');
                }, { once: true });
            }

            // Update other modal content
            const elements = {
                'modalName': profile.name,
                'modalPhoto': profile.photoUrl || '/default-avatar.svg',
                'modalDOB': new Date(profile.dateOfBirth).toLocaleDateString(),
                'modalAge': profile.age,
                'modalHeight': profile.height,
                'modalWeight': profile.weight,
                'modalNationality': profile.nationality,
                'modalPlaceOfBirth': profile.placeOfBirth,
                'modalAmount': formatCurrency(profile.totalScammedUSD),
                'modalProjects': profile.associatedProjects || 'Unknown project',
            };

            // Safely update all elements
            Object.entries(elements).forEach(([id, value]) => {
                const element = document.getElementById(id);
                if (element) {
                    if (id === 'modalPhoto') {
                        element.src = value;
                    } else {
                        element.textContent = value;
                    }
                }
            });

            // Handle HTML content for overview
            const modalOverview = document.getElementById('modalOverview');
            if (modalOverview) {
                modalOverview.innerHTML = profile.overview || 'No overview available';
            }

            // Handle HTML content for story
            const modalStory = document.getElementById('modalStory');
            if (modalStory) {
                modalStory.innerHTML = profile.story || 'No story available';
            }

            // Special handling for methodology to render as HTML list with formatting
            const modalMethodology = document.getElementById('modalMethodology');
            if (modalMethodology) {
                const list = document.createElement('ul');
                list.className = 'list-disc pl-6 space-y-2';
                
                if (Array.isArray(profile.methodology)) {
                    profile.methodology.forEach(item => {
                        const li = document.createElement('li');
                        li.innerHTML = item;
                        list.appendChild(li);
                    });
                }
                
                modalMethodology.innerHTML = '';
                modalMethodology.appendChild(list);
            }

            // Update socials and wallets
            displayProfile(profile);

            // Show overview section by default
            const overviewSection = document.getElementById('overviewSection');
            const overviewButton = document.querySelector('button[onclick="toggleSection(\'overview\')"]');
            if (overviewSection && overviewButton) {
                overviewSection.classList.add('open');
                overviewButton.classList.add('active');
            }

            // Check for scrollable content after content is loaded
            setTimeout(checkScrollable, 100);

            // Show modal
            document.getElementById('profileModal').classList.remove('hidden');
            document.body.classList.add('modal-open');
        }

        function handleModalClick(event) {
            if (event.target.id === 'profileModal') {
                closeModal();
            }
        }

        function closeModal() {
            document.getElementById('profileModal').classList.add('hidden');
            document.body.classList.remove('modal-open');
            
            // Reset all sections when closing
            sections.forEach(section => {
                const content = document.getElementById(`${section}Content`);
                const arrow = document.getElementById(`${section}Arrow`);
                if (content && arrow) {
                    content.classList.remove('open');
                    arrow.classList.remove('rotated');
                }
            });
        }

        function searchProfiles() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const filtered = profiles
                .filter(profile => 
                    profile.status === 'Published' && (
                        profile.name.toLowerCase().includes(searchTerm) ||
                        (profile.associatedProjects && profile.associatedProjects.toLowerCase().includes(searchTerm))
                    )
                )
                .sort((a, b) => b.totalScammedUSD - a.totalScammedUSD);
            
            renderProfiles(filtered);
        }

        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            }).format(amount);
        }

        const sections = ['overview', 'basicInfo', 'story', 'methodology'];
        
        function getNextSection(currentSection) {
            const currentIndex = sections.indexOf(currentSection);
            return sections[(currentIndex + 1) % sections.length];
        }
        
        function toggleSection(section) {
            const sectionElement = document.getElementById(`${section}Section`);
            const button = document.querySelector(`button[onclick="toggleSection('${section}')"]`);
            
            if (!sectionElement || !button) return;

            // Toggle the clicked section
            const isOpen = sectionElement.classList.contains('open');
            
            // Close all sections first
            document.querySelectorAll('.section-content').forEach(content => {
                content.classList.remove('open');
            });
            document.querySelectorAll('.section button').forEach(btn => {
                btn.classList.remove('active');
            });

            // If the section wasn't open, open it
            if (!isOpen) {
                sectionElement.classList.add('open');
                button.classList.add('active');
                // Check for scrollable content after opening
                setTimeout(checkScrollable, 300);
            }
        }

        // Handle resize events
        let resizeTimer;
        function handleResize() {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(() => {
                // Re-initialize section states
                document.querySelectorAll('.section-content').forEach(section => {
                    if (section.classList.contains('open')) {
                        const sectionId = section.id.replace('Section', '');
                        const button = document.querySelector(`button[onclick="toggleSection('${sectionId}')"]`);
                        if (button) {
                            button.classList.add('active');
                        }
                    }
                });
            }, 250);
        }

        // Initialize when page loads
        initialize();

        // Add search input event listener for real-time search
        document.getElementById('searchInput').addEventListener('input', searchProfiles);

        // Add escape key listener for closing modal
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal();
            }
        });

        function displayProfile(profile) {
            // ... existing code ...

            // Update socials section
            const socialsContainer = document.getElementById('modalSocials').querySelector('div');
            socialsContainer.innerHTML = '';
            
            if (profile.socials && profile.socials.length > 0) {
                profile.socials.forEach(social => {
                    const socialDiv = document.createElement('div');
                    socialDiv.className = 'flex items-center space-x-3 p-3 bg-white rounded-lg shadow-sm';
                    
                    const icon = document.createElement('div');
                    icon.className = 'w-8 h-8 flex items-center justify-center bg-gray-100 rounded-full';
                    icon.innerHTML = getPlatformIcon(social.platform);
                    
                    const info = document.createElement('div');
                    info.className = 'flex-1';
                    info.innerHTML = `
                        <p class="font-medium">${social.platform}</p>
                        <p class="text-sm text-gray-500">
                            ${social.url ? `<a href="${social.url}" target="_blank" class="text-blue-600 hover:underline">@${social.username}</a>` : `@${social.username}`}
                        </p>
                    `;
                    
                    socialDiv.appendChild(icon);
                    socialDiv.appendChild(info);
                    socialsContainer.appendChild(socialDiv);
                });
            } else {
                socialsContainer.innerHTML = '<p class="text-gray-500 text-center col-span-2">No social media accounts listed</p>';
            }

            // Update known wallets section
            const walletsContainer = document.getElementById('modalKnownWallets').querySelector('div');
            walletsContainer.innerHTML = '';
            
            if (profile.knownWallets && profile.knownWallets.length > 0) {
                profile.knownWallets.forEach(wallet => {
                    const walletDiv = document.createElement('div');
                    walletDiv.className = 'p-4 bg-white rounded-lg shadow-sm';
                    walletDiv.innerHTML = `
                        <div class="flex items-center justify-between mb-2">
                            <span class="font-medium">${wallet.blockchain}</span>
                            <span class="text-xs px-2 py-1 bg-gray-100 rounded">${truncateAddress(wallet.address)}</span>
                        </div>
                        ${wallet.description ? `<p class="text-sm text-gray-500">${wallet.description}</p>` : ''}
                    `;
                    walletsContainer.appendChild(walletDiv);
                });
            } else {
                walletsContainer.innerHTML = '<p class="text-gray-500 text-center">No known wallets listed</p>';
            }
        }

        function getPlatformIcon(platform) {
            const icons = {
                'Twitter': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg>',
                'Telegram': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm5.894 8.221l-1.97 9.28c-.145.658-.537.818-1.084.508l-3-2.21-1.446 1.394c-.14.18-.357.227-.535.227l.19-2.712 4.94-4.465c.215-.19-.047-.296-.332-.106l-6.104 3.853-2.623-.916c-.57-.176-.582-.57.12-.842l10.24-3.95c.475-.176.89.106.724.842z"/></svg>',
                'Discord': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M20.317 4.37a19.791 19.791 0 00-4.885-1.515.074.074 0 00-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 00-5.487 0 12.64 12.64 0 00-.617-1.25.077.077 0 00-.079-.037A19.736 19.736 0 003.677 4.37a.07.07 0 00-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 00.031.057 19.9 19.9 0 005.993 3.03.078.078 0 00.084-.028c.462-.63.874-1.295 1.226-1.994a.076.076 0 00-.041-.106 13.107 13.107 0 01-1.872-.892.077.077 0 01-.008-.128 10.2 10.2 0 00.372-.292.074.074 0 01.077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 01.078.01c.12.098.246.198.373.292a.077.077 0 01-.006.127 12.299 12.299 0 01-1.873.892.077.077 0 00-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 00.084.028 19.839 19.839 0 006.002-3.03.077.077 0 00.032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 00-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z"/></svg>',
                'LinkedIn': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>',
                'Instagram': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/></svg>',
                'Facebook': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/></svg>',
                'Other': '<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 22c-5.523 0-10-4.477-10-10S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-11.5c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5c.829 0 1.5-.671 1.5-1.5s-.671-1.5-1.5-1.5zm-4.5 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5c.829 0 1.5-.671 1.5-1.5s-.671-1.5-1.5-1.5zm9 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5c.829 0 1.5-.671 1.5-1.5s-.671-1.5-1.5-1.5z"/></svg>'
            };
            return icons[platform] || icons['Other'];
        }

        function truncateAddress(address) {
            if (!address) return '';
            return `${address.slice(0, 6)}...${address.slice(-4)}`;
        }
    </script>
</body>
</html>