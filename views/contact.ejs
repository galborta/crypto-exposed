<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Us - EXP0S3D</title>
    <%- include('partials/styles') %>
</head>
<body class="bg-gray-100">
    <%- include('partials/header') %>

    <main class="container mx-auto px-4 py-8">
        <div class="max-w-2xl mx-auto">
            <div class="bg-white rounded-lg shadow-lg p-6 md:p-8">
                <h1 class="text-2xl font-bold mb-6">Contact Us</h1>

                <!-- Form Type Selection -->
                <div class="mb-8">
                    <div class="flex space-x-4">
                        <button onclick="switchForm('contact')" id="contactBtn" class="flex-1 py-3 px-4 rounded-lg bg-black text-white">Contact Us</button>
                        <button onclick="switchForm('suggestion')" id="suggestionBtn" class="flex-1 py-3 px-4 rounded-lg bg-gray-200 text-gray-700">Submit Entry</button>
                    </div>
                </div>

                <!-- Contact Form -->
                <form id="contactForm" class="space-y-6">
                    <div>
                        <label for="contact-name" class="block text-sm font-medium text-gray-700 mb-1">Name</label>
                        <input type="text" id="contact-name" name="name" required
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Email or Twitter Handle</label>
                        <div class="flex">
                            <input type="text" id="contact-email-twitter" name="contact" placeholder="Email or @twitter"
                                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        </div>
                    </div>

                    <div>
                        <label for="contact-message" class="block text-sm font-medium text-gray-700 mb-1">Message</label>
                        <textarea id="contact-message" name="message" rows="4" required
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
                    </div>

                    <button type="submit" class="w-full bg-black text-white py-3 px-6 rounded-lg hover:bg-gray-800 transition-colors duration-200">
                        Send Message
                    </button>
                </form>

                <!-- Entry Submission Form -->
                <form id="suggestionForm" class="hidden space-y-6">
                    <div class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-6">
                        <p class="text-sm text-gray-600">
                            Our team conducts thorough research to ensure complete and accurate information before adding new entries to our database.
                        </p>
                    </div>

                    <!-- Information Type Selection -->
                    <div class="space-y-3">
                        <p class="text-sm font-medium text-gray-700">What information do you have?</p>
                        <div class="flex flex-wrap gap-2">
                            <button type="button" onclick="toggleField('name')" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 text-sm info-toggle">
                                Subject Name
                            </button>
                            <button type="button" onclick="toggleField('twitter')" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 text-sm info-toggle">
                                Twitter Handle
                            </button>
                            <button type="button" onclick="toggleField('wallets')" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 text-sm info-toggle">
                                Wallet Addresses
                            </button>
                            <button type="button" onclick="toggleField('attachments')" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 text-sm info-toggle">
                                Attachments
                            </button>
                            <button type="button" onclick="toggleField('message')" class="px-4 py-2 rounded-lg bg-gray-200 hover:bg-gray-300 text-sm info-toggle">
                                Additional Info
                            </button>
                        </div>
                    </div>

                    <div id="name-field" class="hidden field-section">
                        <label for="suggestion-subject" class="block text-sm font-medium text-gray-700 mb-1">Subject Name</label>
                        <input type="text" id="suggestion-subject" name="subject"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>

                    <div id="twitter-field" class="hidden field-section">
                        <label for="suggestion-twitter" class="block text-sm font-medium text-gray-700 mb-1">Twitter Handle</label>
                        <input type="text" id="suggestion-twitter" name="twitter" placeholder="@handle"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>

                    <div id="wallets-field" class="hidden field-section">
                        <label for="suggestion-wallets" class="block text-sm font-medium text-gray-700 mb-1">Wallet Addresses</label>
                        <textarea id="suggestion-wallets" name="wallets" rows="2" placeholder="One address per line"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
                    </div>

                    <div id="attachments-field" class="hidden field-section">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Attachments</label>
                        <input type="file" id="suggestion-attachments" name="attachments" multiple accept="image/*,.pdf,.doc,.docx"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <p class="mt-1 text-sm text-gray-500">Accepted formats: Images, PDF, DOC (Max 5MB per file)</p>
                    </div>

                    <div id="message-field" class="hidden field-section">
                        <label for="suggestion-message" class="block text-sm font-medium text-gray-700 mb-1">Additional Information</label>
                        <textarea id="suggestion-message" name="message" rows="4"
                            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
                    </div>

                    <button type="submit" class="w-full bg-black text-white py-3 px-6 rounded-lg hover:bg-gray-800 transition-colors duration-200">
                        Submit Entry
                    </button>
                </form>
            </div>
        </div>
    </main>

    <%- include('partials/footer') %>

    <script>
        function switchForm(type) {
            const contactForm = document.getElementById('contactForm');
            const suggestionForm = document.getElementById('suggestionForm');
            const contactBtn = document.getElementById('contactBtn');
            const suggestionBtn = document.getElementById('suggestionBtn');

            if (type === 'contact') {
                contactForm.classList.remove('hidden');
                suggestionForm.classList.add('hidden');
                contactBtn.classList.add('bg-black', 'text-white');
                contactBtn.classList.remove('bg-gray-200', 'text-gray-700');
                suggestionBtn.classList.add('bg-gray-200', 'text-gray-700');
                suggestionBtn.classList.remove('bg-black', 'text-white');
            } else {
                contactForm.classList.add('hidden');
                suggestionForm.classList.remove('hidden');
                contactBtn.classList.add('bg-gray-200', 'text-gray-700');
                contactBtn.classList.remove('bg-black', 'text-white');
                suggestionBtn.classList.add('bg-black', 'text-white');
                suggestionBtn.classList.remove('bg-gray-200', 'text-gray-700');
            }
        }

        // Check URL parameters on page load
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('form') === 'submit') {
                switchForm('suggestion');
            }
        });

        function toggleField(fieldName) {
            const button = event.target;
            const fieldSection = document.getElementById(`${fieldName}-field`);
            
            if (fieldSection.classList.contains('hidden')) {
                fieldSection.classList.remove('hidden');
                button.classList.remove('bg-gray-200');
                button.classList.add('bg-blue-500', 'text-white');
            } else {
                fieldSection.classList.add('hidden');
                button.classList.remove('bg-blue-500', 'text-white');
                button.classList.add('bg-gray-200');
            }
        }

        // Handle form submissions
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const isSubmitEntry = e.target.id === 'suggestionForm';
                
                try {
                    if (isSubmitEntry) {
                        // Create FormData object to handle files
                        const formData = new FormData();
                        formData.append('type', 'suggestion');

                        // Add text fields
                        const subjectValue = document.getElementById('suggestion-subject')?.value || '';
                        const twitterValue = document.getElementById('suggestion-twitter')?.value || '';
                        const walletsValue = document.getElementById('suggestion-wallets')?.value || '';
                        const messageValue = document.getElementById('suggestion-message')?.value || '';

                        formData.append('suggestion-subject', subjectValue);
                        formData.append('suggestion-twitter', twitterValue);
                        formData.append('suggestion-wallets', walletsValue);
                        formData.append('suggestion-message', messageValue);

                        // Add files if any
                        const fileInput = document.getElementById('suggestion-attachments');
                        if (fileInput && fileInput.files.length > 0) {
                            Array.from(fileInput.files).forEach((file, index) => {
                                // Validate file size (5MB limit)
                                if (file.size > 5 * 1024 * 1024) {
                                    throw new Error(`File ${file.name} exceeds 5MB limit`);
                                }
                                formData.append(`attachments`, file);
                            });
                        }

                        // Check if at least one field has content or files are attached
                        const hasContent = subjectValue.trim() !== '' || 
                                         twitterValue.trim() !== '' || 
                                         walletsValue.trim() !== '' || 
                                         messageValue.trim() !== '' ||
                                         (fileInput && fileInput.files.length > 0);

                        if (!hasContent) {
                            throw new Error('Please provide at least one piece of information (Subject Name, Twitter Handle, Wallet Addresses, Additional Information, or Attachments)');
                        }

                        // Send the submission data
                        const response = await fetch('/api/contact', {
                            method: 'POST',
                            headers: {
                                'CSRF-Token': '<%= csrfToken %>'
                                // Remove Content-Type header to let browser set it with boundary for multipart/form-data
                            },
                            credentials: 'same-origin',
                            body: formData
                        });

                        const result = await response.json();

                        if (response.ok) {
                            alert(result.message || 'Entry submitted successfully!');
                            e.target.reset();
                            // Reset toggle buttons and hide fields
                            document.querySelectorAll('.info-toggle').forEach(button => {
                                button.classList.remove('bg-blue-500', 'text-white');
                                button.classList.add('bg-gray-200');
                            });
                            document.querySelectorAll('.field-section').forEach(section => {
                                section.classList.add('hidden');
                            });
                        } else {
                            throw new Error(result.error || 'Failed to submit entry');
                        }
                    } else {
                        // Handle Contact Us form submission
                        const formData = new FormData(e.target);
                        const data = Object.fromEntries(formData.entries());
                        
                        const response = await fetch('/api/contact', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'CSRF-Token': '<%= csrfToken %>'
                            },
                            credentials: 'same-origin',
                            body: JSON.stringify({
                                ...data,
                                type: 'contact'
                            })
                        });

                        const result = await response.json();

                        if (response.ok) {
                            alert(result.message || 'Message sent successfully!');
                            e.target.reset();
                        } else {
                            throw new Error(result.error || 'Failed to send message');
                        }
                    }
                } catch (error) {
                    alert(error.message || 'Error sending message. Please try again later.');
                    console.error('Error:', error);
                }
            });
        });
    </script>
</body>
</html> 