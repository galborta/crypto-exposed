<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="/css/admin.css">
</head>
<body class="bg-gray-100">
    <%- include('../partials/adminNav') %>

    <main class="container mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">Scammer Profiles</h1>
            <button onclick="openModal()" class="btn btn-primary">
                Add New Profile
            </button>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Total Profiles</h3>
                <p class="text-2xl font-bold mt-2" id="totalProfiles">0</p>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Published Profiles</h3>
                <p class="text-2xl font-bold mt-2" id="publishedProfiles">0</p>
            </div>
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-gray-500 text-sm font-medium">Total Amount Scammed</h3>
                <p class="text-2xl font-bold mt-2" id="totalScammed">$0</p>
            </div>
        </div>

        <!-- Profiles Table -->
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount Scammed</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200" id="profilesTableBody">
                        <!-- Profiles will be inserted here -->
                    </tbody>
                </table>
            </div>
        </div>
    </main>

    <!-- Modal -->
    <div id="profileModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto">
        <div class="relative my-10 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white max-h-[90vh] overflow-y-auto">
            <div class="mt-3">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-medium text-gray-900" id="modalTitle">Add New Profile</h3>
                    <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-500">
                        <span class="sr-only">Close</span>
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>
                <form id="profileForm" class="space-y-4">
                    <input type="hidden" id="profileId">
                    
                    <!-- Basic Information Section -->
                    <div class="border-b pb-4">
                        <h4 class="text-md font-medium text-gray-900 mb-3">Basic Information</h4>
                        <div class="space-y-3">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Name</label>
                                <input type="text" id="name" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Date of Birth</label>
                                <input type="date" id="dateOfBirth" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Age</label>
                                <input type="number" id="age" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Height</label>
                                <input type="text" id="height" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" placeholder="e.g., 5'11">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Weight</label>
                                <input type="text" id="weight" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" placeholder="e.g., 170 lbs">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Nationality</label>
                                <input type="text" id="nationality" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Photo URL</label>
                                <input type="url" id="photoUrl" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                            </div>
                        </div>
                    </div>

                    <!-- Other Information -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Amount Scammed (USD)</label>
                        <input type="number" id="totalScammedUSD" required min="0" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea id="description" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" rows="3"></textarea>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Associated Projects</label>
                        <textarea id="associatedProjects" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" rows="3" placeholder="List all associated projects..."></textarea>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Evidence</label>
                        <textarea id="evidence" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm" rows="3" placeholder="List all evidence..."></textarea>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Status</label>
                        <select id="status" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                            <option value="Draft">Draft</option>
                            <option value="Published">Published</option>
                        </select>
                    </div>
                    <div class="flex justify-end space-x-3">
                        <button type="button" onclick="closeModal()" class="btn bg-gray-200 text-gray-800 hover:bg-gray-300">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            Save Profile
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        let profiles = [];

        // Fetch and display profiles
        async function fetchProfiles() {
            try {
                const [profilesResponse, statsResponse] = await Promise.all([
                    fetch('/api/profiles'),
                    fetch('/api/profiles/stats')
                ]);

                const profilesData = await profilesResponse.json();
                const statsData = await statsResponse.json();

                // Update profiles array
                profiles = profilesData.profiles || [];
                
                // Update stats
                document.getElementById('totalProfiles').textContent = statsData.total || 0;
                document.getElementById('publishedProfiles').textContent = statsData.publishedProfiles || 0;
                document.getElementById('totalScammed').textContent = new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD',
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 0
                }).format(statsData.totalScammedUSD || 0);

                // Render profiles
                renderProfiles();
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        // Render profiles in table
        function renderProfiles() {
            const tbody = document.getElementById('profilesTableBody');
            tbody.innerHTML = profiles.map(profile => `
                <tr>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            ${profile.photoUrl ? `
                                <img class="h-10 w-10 rounded-full mr-3" src="${profile.photoUrl}" alt="">
                            ` : ''}
                            <div>
                                <div class="text-sm font-medium text-gray-900">${profile.name}</div>
                                <div class="text-sm text-gray-500">${profile.nationality}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">
                            ${new Intl.NumberFormat('en-US', {
                                style: 'currency',
                                currency: 'USD',
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 0
                            }).format(profile.totalScammedUSD)}
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                            profile.status === 'Published' 
                                ? 'bg-green-100 text-green-800' 
                                : 'bg-gray-100 text-gray-800'
                        }">
                            ${profile.status}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <button onclick="editProfile('${profile._id}')" class="text-blue-600 hover:text-blue-900 mr-3">Edit</button>
                        <button onclick="deleteProfile('${profile._id}')" class="text-red-600 hover:text-red-900">Delete</button>
                    </td>
                </tr>
            `).join('');
        }

        // Modal functions
        function openModal() {
            document.getElementById('profileModal').classList.remove('hidden');
            document.getElementById('modalTitle').textContent = 'Add New Profile';
            document.getElementById('profileForm').reset();
            document.getElementById('profileId').value = '';
        }

        function closeModal() {
            document.getElementById('profileModal').classList.add('hidden');
        }

        // Edit profile
        function editProfile(id) {
            const profile = profiles.find(p => p._id === id);
            if (profile) {
                document.getElementById('profileId').value = profile._id;
                document.getElementById('name').value = profile.name || '';
                document.getElementById('dateOfBirth').value = profile.dateOfBirth ? new Date(profile.dateOfBirth).toISOString().split('T')[0] : '';
                document.getElementById('age').value = profile.age || '';
                document.getElementById('height').value = profile.height || '';
                document.getElementById('weight').value = profile.weight || '';
                document.getElementById('nationality').value = profile.nationality || '';
                document.getElementById('photoUrl').value = profile.photoUrl || '';
                document.getElementById('totalScammedUSD').value = profile.totalScammedUSD || '';
                document.getElementById('description').value = profile.description || '';
                document.getElementById('associatedProjects').value = profile.associatedProjects || '';
                document.getElementById('evidence').value = profile.evidence || '';
                document.getElementById('status').value = profile.status || 'Draft';
                
                document.getElementById('modalTitle').textContent = 'Edit Profile';
                document.getElementById('profileModal').classList.remove('hidden');
                
                // Scroll to top of modal
                document.querySelector('#profileModal > div').scrollTop = 0;
            }
        }

        // Delete profile
        async function deleteProfile(id) {
            if (confirm('Are you sure you want to delete this profile?')) {
                try {
                    const response = await fetch(`/api/profiles/${id}`, {
                        method: 'DELETE'
                    });
                    if (response.ok) {
                        await fetchProfiles();
                    }
                } catch (error) {
                    console.error('Error deleting profile:', error);
                }
            }
        }

        // Handle form submission
        document.getElementById('profileForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const profileId = document.getElementById('profileId').value;
            const profileData = {
                name: document.getElementById('name').value,
                dateOfBirth: document.getElementById('dateOfBirth').value,
                age: Number(document.getElementById('age').value),
                height: document.getElementById('height').value,
                weight: document.getElementById('weight').value,
                nationality: document.getElementById('nationality').value,
                photoUrl: document.getElementById('photoUrl').value,
                totalScammedUSD: Number(document.getElementById('totalScammedUSD').value),
                description: document.getElementById('description').value,
                associatedProjects: document.getElementById('associatedProjects').value,
                evidence: document.getElementById('evidence').value,
                status: document.getElementById('status').value
            };

            try {
                const url = profileId ? `/api/profiles/${profileId}` : '/api/profiles';
                const method = profileId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(profileData)
                });

                if (response.ok) {
                    closeModal();
                    await fetchProfiles();
                }
            } catch (error) {
                console.error('Error saving profile:', error);
            }
        });

        // Load profiles when page loads
        document.addEventListener('DOMContentLoaded', fetchProfiles);
    </script>
</body>
</html> 